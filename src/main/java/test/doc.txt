1、redis数据库中存储数据说明：
① {token,phoneNum}   ({uuid,phoneNum})
   用来判断WEB页面访问是否已经经过认证，如果已经认证过，token字段会写到web页面的cookie中

② {phoneNum,maxRetryTime}
   用来记录该用户登录时连续输错密码的次数，超过最大值错误次数后，会临时禁用该账户登录一段时间。

③ {sign,phoneNum}
   用来缓存已经认证过的api 数字签名，如果在超时时间之前有后续api请求，则直接从redis数据库中读取缓存进行认证即可；
   如果后续api请求超过了超时时间，则需要从mysql数据库中读取相关信息生成签名，与api携带的签名进行比对。

④ {ip+port+"r",max_request_count}
   用来记录在规定的时间内，request请求次数。每请求一次，maxCount减少1，
   当maxCount小于0时请求失败。直至定时器超时，maxCount重新设置。

⑤ { ip+port+"c", max_send_msg_request_count}
   用来记录在规定时间内，获取验证码code的次数.每获取一次验证码，maxCount减少1，当maxCount小于0时，禁止继续获取验证码。
   定时器超时后maxCount会重置。

⑥ {phoneNum+"code",code}
    记录验证码

2、API 数字签名说明
   1、对于GET请求
       对于不包含cookie的GET请求（API请求）,通过数字签名认证。把整个URL请求路径后的部分和用户名、密码进行hash作为签名
       例如 https://api.elocker.com.cn/locker/getAll?appid=phoneNum,sign=abcdef
       sign=md5(/locker/get+md5(phoneNum+md5(password))*/

       其中，get请求必须携带appid和sign参数

   2、对于POST请求
       对于不包含cookie的POST请求（API请求）,通过数字签名认证。把整个URL和用户名、密码进行hash作为签名
       例如 https://api.elocker.com.cn/locker/get
       sign=md5(locker/get+md5(phoneNum+md5(password))

       postData中必须至少包含appid,sign

3、password 算法
   enc_password=md5(phoneNum+md5(password))
   数据库中保存的是enc_password